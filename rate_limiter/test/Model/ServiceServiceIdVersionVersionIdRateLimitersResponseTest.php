<?php
/**
 * ServiceServiceIdVersionVersionIdRateLimitersResponseTest
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Rate Limiter
 *
 * Rate limiters add configurable origin request rate limiting to a service. Use of this feature is by invite only and subject to the terms set forth in the invitation you were emailed. To create a rate limiting policy, you must have a [paid account with a contract](https://docs.fastly.com/en/guides/accounts-and-pricing-plans#paid-accounts-with-contractual-commitments) for Fastlyâ€™s services.
 *
 * The version of the OpenAPI document: 1.0.0-beta
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ServiceServiceIdVersionVersionIdRateLimitersResponseTest Class Doc Comment
 *
 * @category    Class
 * @description Custom response to be sent when the rate limit is exceeded. Required if &#x60;action&#x60; is \&quot;response\&quot;.
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ServiceServiceIdVersionVersionIdRateLimitersResponseTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ServiceServiceIdVersionVersionIdRateLimitersResponse"
     */
    public function testServiceServiceIdVersionVersionIdRateLimitersResponse()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "status"
     */
    public function testPropertyStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "content_type"
     */
    public function testPropertyContentType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "content"
     */
    public function testPropertyContent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
