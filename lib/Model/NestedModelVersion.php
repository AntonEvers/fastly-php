<?php
/**
 * NestedModelVersion
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Fastly API
 *
 * Via the Fastly API you can perform any of the operations that are possible within the management console,  including creating services, domains, and backends, configuring rules or uploading your own application code, as well as account operations such as user administration and billing reports. The API is organized into collections of endpoints that allow manipulation of objects related to Fastly services and accounts. For the most accurate and up-to-date API reference content, visit developer.fastly.com/reference/api/
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * NestedModelVersion Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class NestedModelVersion implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'nested_model_version';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'created_at' => 'string',
        'deleted_at' => 'string',
        'updated_at' => 'string',
        'service_id' => 'string',
        'active' => 'bool',
        'comment' => 'string',
        'deployed' => 'bool',
        'locked' => 'bool',
        'number' => 'int',
        'staging' => 'bool',
        'testing' => 'bool',
        'backends' => '\OpenAPI\Client\Model\SchemasModelBackend[]',
        'cache_settings' => '\OpenAPI\Client\Model\ModelCacheSettings[]',
        'conditions' => '\OpenAPI\Client\Model\ModelCondition[]',
        'directors' => '\OpenAPI\Client\Model\ModelDirector[]',
        'domains' => '\OpenAPI\Client\Model\ModelDomain[]',
        'gzips' => '\OpenAPI\Client\Model\ModelGzip[]',
        'headers' => '\OpenAPI\Client\Model\SchemasModelHeader[]',
        'healthchecks' => '\OpenAPI\Client\Model\ModelHealthcheck[]',
        'request_settings' => '\OpenAPI\Client\Model\ModelRequestSettings[]',
        'response_objects' => '\OpenAPI\Client\Model\ModelResponseObject[]',
        'settings' => '\OpenAPI\Client\Model\SchemasModelSettings[]',
        'snippets' => '\OpenAPI\Client\Model\SchemasModelSnippet[]',
        'vcls' => '\OpenAPI\Client\Model\SchemasModelVcl[]',
        'wordpress' => 'object[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'created_at' => null,
        'deleted_at' => null,
        'updated_at' => null,
        'service_id' => null,
        'active' => null,
        'comment' => null,
        'deployed' => null,
        'locked' => null,
        'number' => null,
        'staging' => null,
        'testing' => null,
        'backends' => null,
        'cache_settings' => null,
        'conditions' => null,
        'directors' => null,
        'domains' => null,
        'gzips' => null,
        'headers' => null,
        'healthchecks' => null,
        'request_settings' => null,
        'response_objects' => null,
        'settings' => null,
        'snippets' => null,
        'vcls' => null,
        'wordpress' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'created_at' => 'created_at',
        'deleted_at' => 'deleted_at',
        'updated_at' => 'updated_at',
        'service_id' => 'service_id',
        'active' => 'active',
        'comment' => 'comment',
        'deployed' => 'deployed',
        'locked' => 'locked',
        'number' => 'number',
        'staging' => 'staging',
        'testing' => 'testing',
        'backends' => 'backends',
        'cache_settings' => 'cache_settings',
        'conditions' => 'conditions',
        'directors' => 'directors',
        'domains' => 'domains',
        'gzips' => 'gzips',
        'headers' => 'headers',
        'healthchecks' => 'healthchecks',
        'request_settings' => 'request_settings',
        'response_objects' => 'response_objects',
        'settings' => 'settings',
        'snippets' => 'snippets',
        'vcls' => 'vcls',
        'wordpress' => 'wordpress'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'created_at' => 'setCreatedAt',
        'deleted_at' => 'setDeletedAt',
        'updated_at' => 'setUpdatedAt',
        'service_id' => 'setServiceId',
        'active' => 'setActive',
        'comment' => 'setComment',
        'deployed' => 'setDeployed',
        'locked' => 'setLocked',
        'number' => 'setNumber',
        'staging' => 'setStaging',
        'testing' => 'setTesting',
        'backends' => 'setBackends',
        'cache_settings' => 'setCacheSettings',
        'conditions' => 'setConditions',
        'directors' => 'setDirectors',
        'domains' => 'setDomains',
        'gzips' => 'setGzips',
        'headers' => 'setHeaders',
        'healthchecks' => 'setHealthchecks',
        'request_settings' => 'setRequestSettings',
        'response_objects' => 'setResponseObjects',
        'settings' => 'setSettings',
        'snippets' => 'setSnippets',
        'vcls' => 'setVcls',
        'wordpress' => 'setWordpress'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'created_at' => 'getCreatedAt',
        'deleted_at' => 'getDeletedAt',
        'updated_at' => 'getUpdatedAt',
        'service_id' => 'getServiceId',
        'active' => 'getActive',
        'comment' => 'getComment',
        'deployed' => 'getDeployed',
        'locked' => 'getLocked',
        'number' => 'getNumber',
        'staging' => 'getStaging',
        'testing' => 'getTesting',
        'backends' => 'getBackends',
        'cache_settings' => 'getCacheSettings',
        'conditions' => 'getConditions',
        'directors' => 'getDirectors',
        'domains' => 'getDomains',
        'gzips' => 'getGzips',
        'headers' => 'getHeaders',
        'healthchecks' => 'getHealthchecks',
        'request_settings' => 'getRequestSettings',
        'response_objects' => 'getResponseObjects',
        'settings' => 'getSettings',
        'snippets' => 'getSnippets',
        'vcls' => 'getVcls',
        'wordpress' => 'getWordpress'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['created_at'] = $data['created_at'] ?? null;
        $this->container['deleted_at'] = $data['deleted_at'] ?? null;
        $this->container['updated_at'] = $data['updated_at'] ?? null;
        $this->container['service_id'] = $data['service_id'] ?? null;
        $this->container['active'] = $data['active'] ?? false;
        $this->container['comment'] = $data['comment'] ?? '';
        $this->container['deployed'] = $data['deployed'] ?? null;
        $this->container['locked'] = $data['locked'] ?? false;
        $this->container['number'] = $data['number'] ?? null;
        $this->container['staging'] = $data['staging'] ?? false;
        $this->container['testing'] = $data['testing'] ?? false;
        $this->container['backends'] = $data['backends'] ?? null;
        $this->container['cache_settings'] = $data['cache_settings'] ?? null;
        $this->container['conditions'] = $data['conditions'] ?? null;
        $this->container['directors'] = $data['directors'] ?? null;
        $this->container['domains'] = $data['domains'] ?? null;
        $this->container['gzips'] = $data['gzips'] ?? null;
        $this->container['headers'] = $data['headers'] ?? null;
        $this->container['healthchecks'] = $data['healthchecks'] ?? null;
        $this->container['request_settings'] = $data['request_settings'] ?? null;
        $this->container['response_objects'] = $data['response_objects'] ?? null;
        $this->container['settings'] = $data['settings'] ?? null;
        $this->container['snippets'] = $data['snippets'] ?? null;
        $this->container['vcls'] = $data['vcls'] ?? null;
        $this->container['wordpress'] = $data['wordpress'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets created_at
     *
     * @return string|null
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param string|null $created_at Date and time in ISO 8601 format.
     *
     * @return self
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets deleted_at
     *
     * @return string|null
     */
    public function getDeletedAt()
    {
        return $this->container['deleted_at'];
    }

    /**
     * Sets deleted_at
     *
     * @param string|null $deleted_at Date and time in ISO 8601 format.
     *
     * @return self
     */
    public function setDeletedAt($deleted_at)
    {
        $this->container['deleted_at'] = $deleted_at;

        return $this;
    }

    /**
     * Gets updated_at
     *
     * @return string|null
     */
    public function getUpdatedAt()
    {
        return $this->container['updated_at'];
    }

    /**
     * Sets updated_at
     *
     * @param string|null $updated_at Date and time in ISO 8601 format.
     *
     * @return self
     */
    public function setUpdatedAt($updated_at)
    {
        $this->container['updated_at'] = $updated_at;

        return $this;
    }

    /**
     * Gets service_id
     *
     * @return string|null
     */
    public function getServiceId()
    {
        return $this->container['service_id'];
    }

    /**
     * Sets service_id
     *
     * @param string|null $service_id Alphanumeric string identifying the service.
     *
     * @return self
     */
    public function setServiceId($service_id)
    {
        $this->container['service_id'] = $service_id;

        return $this;
    }

    /**
     * Gets active
     *
     * @return bool|null
     */
    public function getActive()
    {
        return $this->container['active'];
    }

    /**
     * Sets active
     *
     * @param bool|null $active Whether this is the active version or not.
     *
     * @return self
     */
    public function setActive($active)
    {
        $this->container['active'] = $active;

        return $this;
    }

    /**
     * Gets comment
     *
     * @return string|null
     */
    public function getComment()
    {
        return $this->container['comment'];
    }

    /**
     * Sets comment
     *
     * @param string|null $comment A freeform descriptive note.
     *
     * @return self
     */
    public function setComment($comment)
    {
        $this->container['comment'] = $comment;

        return $this;
    }

    /**
     * Gets deployed
     *
     * @return bool|null
     */
    public function getDeployed()
    {
        return $this->container['deployed'];
    }

    /**
     * Sets deployed
     *
     * @param bool|null $deployed Unused at this time.
     *
     * @return self
     */
    public function setDeployed($deployed)
    {
        $this->container['deployed'] = $deployed;

        return $this;
    }

    /**
     * Gets locked
     *
     * @return bool|null
     */
    public function getLocked()
    {
        return $this->container['locked'];
    }

    /**
     * Sets locked
     *
     * @param bool|null $locked Whether this version is locked or not. Objects can not be added or edited on locked versions.
     *
     * @return self
     */
    public function setLocked($locked)
    {
        $this->container['locked'] = $locked;

        return $this;
    }

    /**
     * Gets number
     *
     * @return int|null
     */
    public function getNumber()
    {
        return $this->container['number'];
    }

    /**
     * Sets number
     *
     * @param int|null $number The number of this version.
     *
     * @return self
     */
    public function setNumber($number)
    {
        $this->container['number'] = $number;

        return $this;
    }

    /**
     * Gets staging
     *
     * @return bool|null
     */
    public function getStaging()
    {
        return $this->container['staging'];
    }

    /**
     * Sets staging
     *
     * @param bool|null $staging Unused at this time.
     *
     * @return self
     */
    public function setStaging($staging)
    {
        $this->container['staging'] = $staging;

        return $this;
    }

    /**
     * Gets testing
     *
     * @return bool|null
     */
    public function getTesting()
    {
        return $this->container['testing'];
    }

    /**
     * Sets testing
     *
     * @param bool|null $testing Unused at this time.
     *
     * @return self
     */
    public function setTesting($testing)
    {
        $this->container['testing'] = $testing;

        return $this;
    }

    /**
     * Gets backends
     *
     * @return \OpenAPI\Client\Model\SchemasModelBackend[]|null
     */
    public function getBackends()
    {
        return $this->container['backends'];
    }

    /**
     * Sets backends
     *
     * @param \OpenAPI\Client\Model\SchemasModelBackend[]|null $backends List of backends associated to this service.
     *
     * @return self
     */
    public function setBackends($backends)
    {
        $this->container['backends'] = $backends;

        return $this;
    }

    /**
     * Gets cache_settings
     *
     * @return \OpenAPI\Client\Model\ModelCacheSettings[]|null
     */
    public function getCacheSettings()
    {
        return $this->container['cache_settings'];
    }

    /**
     * Sets cache_settings
     *
     * @param \OpenAPI\Client\Model\ModelCacheSettings[]|null $cache_settings List of cache settings associated to this service.
     *
     * @return self
     */
    public function setCacheSettings($cache_settings)
    {
        $this->container['cache_settings'] = $cache_settings;

        return $this;
    }

    /**
     * Gets conditions
     *
     * @return \OpenAPI\Client\Model\ModelCondition[]|null
     */
    public function getConditions()
    {
        return $this->container['conditions'];
    }

    /**
     * Sets conditions
     *
     * @param \OpenAPI\Client\Model\ModelCondition[]|null $conditions List of conditions associated to this service.
     *
     * @return self
     */
    public function setConditions($conditions)
    {
        $this->container['conditions'] = $conditions;

        return $this;
    }

    /**
     * Gets directors
     *
     * @return \OpenAPI\Client\Model\ModelDirector[]|null
     */
    public function getDirectors()
    {
        return $this->container['directors'];
    }

    /**
     * Sets directors
     *
     * @param \OpenAPI\Client\Model\ModelDirector[]|null $directors List of directors associated to this service.
     *
     * @return self
     */
    public function setDirectors($directors)
    {
        $this->container['directors'] = $directors;

        return $this;
    }

    /**
     * Gets domains
     *
     * @return \OpenAPI\Client\Model\ModelDomain[]|null
     */
    public function getDomains()
    {
        return $this->container['domains'];
    }

    /**
     * Sets domains
     *
     * @param \OpenAPI\Client\Model\ModelDomain[]|null $domains List of domains associated to this service.
     *
     * @return self
     */
    public function setDomains($domains)
    {
        $this->container['domains'] = $domains;

        return $this;
    }

    /**
     * Gets gzips
     *
     * @return \OpenAPI\Client\Model\ModelGzip[]|null
     */
    public function getGzips()
    {
        return $this->container['gzips'];
    }

    /**
     * Sets gzips
     *
     * @param \OpenAPI\Client\Model\ModelGzip[]|null $gzips List of gzip rules associated to this service.
     *
     * @return self
     */
    public function setGzips($gzips)
    {
        $this->container['gzips'] = $gzips;

        return $this;
    }

    /**
     * Gets headers
     *
     * @return \OpenAPI\Client\Model\SchemasModelHeader[]|null
     */
    public function getHeaders()
    {
        return $this->container['headers'];
    }

    /**
     * Sets headers
     *
     * @param \OpenAPI\Client\Model\SchemasModelHeader[]|null $headers List of headers associated to this service.
     *
     * @return self
     */
    public function setHeaders($headers)
    {
        $this->container['headers'] = $headers;

        return $this;
    }

    /**
     * Gets healthchecks
     *
     * @return \OpenAPI\Client\Model\ModelHealthcheck[]|null
     */
    public function getHealthchecks()
    {
        return $this->container['healthchecks'];
    }

    /**
     * Sets healthchecks
     *
     * @param \OpenAPI\Client\Model\ModelHealthcheck[]|null $healthchecks List of healthchecks associated to this service.
     *
     * @return self
     */
    public function setHealthchecks($healthchecks)
    {
        $this->container['healthchecks'] = $healthchecks;

        return $this;
    }

    /**
     * Gets request_settings
     *
     * @return \OpenAPI\Client\Model\ModelRequestSettings[]|null
     */
    public function getRequestSettings()
    {
        return $this->container['request_settings'];
    }

    /**
     * Sets request_settings
     *
     * @param \OpenAPI\Client\Model\ModelRequestSettings[]|null $request_settings List of request settings for this service.
     *
     * @return self
     */
    public function setRequestSettings($request_settings)
    {
        $this->container['request_settings'] = $request_settings;

        return $this;
    }

    /**
     * Gets response_objects
     *
     * @return \OpenAPI\Client\Model\ModelResponseObject[]|null
     */
    public function getResponseObjects()
    {
        return $this->container['response_objects'];
    }

    /**
     * Sets response_objects
     *
     * @param \OpenAPI\Client\Model\ModelResponseObject[]|null $response_objects List of response objects for this service.
     *
     * @return self
     */
    public function setResponseObjects($response_objects)
    {
        $this->container['response_objects'] = $response_objects;

        return $this;
    }

    /**
     * Gets settings
     *
     * @return \OpenAPI\Client\Model\SchemasModelSettings[]|null
     */
    public function getSettings()
    {
        return $this->container['settings'];
    }

    /**
     * Sets settings
     *
     * @param \OpenAPI\Client\Model\SchemasModelSettings[]|null $settings List of default settings for this service.
     *
     * @return self
     */
    public function setSettings($settings)
    {
        $this->container['settings'] = $settings;

        return $this;
    }

    /**
     * Gets snippets
     *
     * @return \OpenAPI\Client\Model\SchemasModelSnippet[]|null
     */
    public function getSnippets()
    {
        return $this->container['snippets'];
    }

    /**
     * Sets snippets
     *
     * @param \OpenAPI\Client\Model\SchemasModelSnippet[]|null $snippets List of VCL snippets for this service.
     *
     * @return self
     */
    public function setSnippets($snippets)
    {
        $this->container['snippets'] = $snippets;

        return $this;
    }

    /**
     * Gets vcls
     *
     * @return \OpenAPI\Client\Model\SchemasModelVcl[]|null
     */
    public function getVcls()
    {
        return $this->container['vcls'];
    }

    /**
     * Sets vcls
     *
     * @param \OpenAPI\Client\Model\SchemasModelVcl[]|null $vcls List of VCL files for this service.
     *
     * @return self
     */
    public function setVcls($vcls)
    {
        $this->container['vcls'] = $vcls;

        return $this;
    }

    /**
     * Gets wordpress
     *
     * @return object[]|null
     */
    public function getWordpress()
    {
        return $this->container['wordpress'];
    }

    /**
     * Sets wordpress
     *
     * @param object[]|null $wordpress A list of Wordpress rules with this service.
     *
     * @return self
     */
    public function setWordpress($wordpress)
    {
        $this->container['wordpress'] = $wordpress;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


